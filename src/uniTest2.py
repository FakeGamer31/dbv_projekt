# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '..\uiTest.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_BrickDetector(QtWidgets.QMainWindow):
    def setupUi(self, detector):
        self.setObjectName("BrickDetector")
        self.resize(960, 720)
        self.setMinimumSize(QtCore.QSize(960, 720))
        self.setMaximumSize(QtCore.QSize(960, 720))
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setEnabled(True)
        self.centralwidget.setObjectName("centralwidget")
        self.camera_settings_box = QtWidgets.QGroupBox(self.centralwidget)
        self.camera_settings_box.setEnabled(True)
        self.camera_settings_box.setGeometry(QtCore.QRect(680, 30, 251, 251))
        self.camera_settings_box.setObjectName("camera_settings_box")
        self.focus_slider = QtWidgets.QSlider(self.camera_settings_box)
        self.focus_slider.setEnabled(False)
        self.focus_slider.setGeometry(QtCore.QRect(10, 60, 181, 22))
        self.focus_slider.setMouseTracking(False)
        self.focus_slider.setMaximum(255)
        self.focus_slider.setSingleStep(5)
        self.focus_slider.setOrientation(QtCore.Qt.Horizontal)
        self.focus_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.focus_slider.setObjectName("focus_slider")
        self.focus_label = QtWidgets.QLabel(self.camera_settings_box)
        self.focus_label.setGeometry(QtCore.QRect(10, 40, 47, 13))
        self.focus_label.setObjectName("focus_label")
        self.autofocus_checkbox = QtWidgets.QCheckBox(self.camera_settings_box)
        self.autofocus_checkbox.setGeometry(QtCore.QRect(10, 20, 70, 17))
        self.autofocus_checkbox.setChecked(True)
        self.autofocus_checkbox.setObjectName("autofocus_checkbox")
        self.static_radio = QtWidgets.QRadioButton(self.camera_settings_box)
        self.static_radio.setGeometry(QtCore.QRect(10, 224, 82, 17))
        self.static_radio.setObjectName("static_radio")
        self.image_mode_grpup = QtWidgets.QButtonGroup(self)
        self.image_mode_grpup.setObjectName("image_mode_grpup")
        self.image_mode_grpup.addButton(self.static_radio)
        self.live_radio = QtWidgets.QRadioButton(self.camera_settings_box)
        self.live_radio.setGeometry(QtCore.QRect(10, 204, 82, 17))
        self.live_radio.setChecked(True)
        self.live_radio.setObjectName("live_radio")
        self.image_mode_grpup.addButton(self.live_radio)
        self.image_label = QtWidgets.QLabel(self.camera_settings_box)
        self.image_label.setGeometry(QtCore.QRect(10, 184, 81, 16))
        self.image_label.setObjectName("image_label")
        self.contrast_slider = QtWidgets.QSlider(self.camera_settings_box)
        self.contrast_slider.setGeometry(QtCore.QRect(10, 110, 181, 22))
        self.contrast_slider.setMouseTracking(False)
        self.contrast_slider.setMaximum(255)
        self.contrast_slider.setSingleStep(5)
        self.contrast_slider.setOrientation(QtCore.Qt.Horizontal)
        self.contrast_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.contrast_slider.setObjectName("contrast_slider")
        self.contrast_label = QtWidgets.QLabel(self.camera_settings_box)
        self.contrast_label.setGeometry(QtCore.QRect(10, 90, 47, 13))
        self.contrast_label.setObjectName("contrast_label")
        self.brithness_label = QtWidgets.QLabel(self.camera_settings_box)
        self.brithness_label.setGeometry(QtCore.QRect(10, 140, 47, 13))
        self.brithness_label.setObjectName("brithness_label")
        self.brithness_slider = QtWidgets.QSlider(self.camera_settings_box)
        self.brithness_slider.setGeometry(QtCore.QRect(10, 160, 181, 22))
        self.brithness_slider.setMouseTracking(False)
        self.brithness_slider.setMaximum(255)
        self.brithness_slider.setSingleStep(5)
        self.brithness_slider.setOrientation(QtCore.Qt.Horizontal)
        self.brithness_slider.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.brithness_slider.setObjectName("brithness_slider")
        self.buttonBox = QtWidgets.QDialogButtonBox(self.centralwidget)
        self.buttonBox.setGeometry(QtCore.QRect(830, 530, 341, 41))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Save)
        self.buttonBox.setCenterButtons(False)
        self.buttonBox.setObjectName("buttonBox")
        self.video_image_label = QtWidgets.QLabel(self.centralwidget)
        self.video_image_label.setGeometry(QtCore.QRect(10, 20, 640, 480))
        self.video_image_label.setMinimumSize(QtCore.QSize(640, 480))
        self.video_image_label.setMaximumSize(QtCore.QSize(640, 480))
        self.video_image_label.setText("")
        self.video_image_label.setPixmap(QtGui.QPixmap("..\\images/12-13-2023 11_41_31.jpg"))
        self.video_image_label.setScaledContents(True)
        self.video_image_label.setObjectName("video_image_label")
        self.brick_list_text_area = QtWidgets.QTextEdit(self.centralwidget)
        self.brick_list_text_area.setGeometry(QtCore.QRect(680, 290, 256, 361))
        self.brick_list_text_area.setReadOnly(True)
        self.brick_list_text_area.setOverwriteMode(False)
        self.brick_list_text_area.setObjectName("brick_list_text_area")
        self.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(self)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 960, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuAbout = QtWidgets.QMenu(self.menubar)
        self.menuAbout.setObjectName("menuAbout")
        self.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)
        self.actionOpen = QtWidgets.QAction(self)
        self.actionOpen.setObjectName("actionOpen")
        self.actionSave = QtWidgets.QAction(self)
        self.actionSave.setObjectName("actionSave")
        self.actionAbout = QtWidgets.QAction(self)
        self.actionAbout.setObjectName("actionAbout")
        self.actionHow_to_use = QtWidgets.QAction(self)
        self.actionHow_to_use.setObjectName("actionHow_to_use")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuAbout.addAction(self.actionAbout)
        self.menuAbout.addAction(self.actionHow_to_use)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuAbout.menuAction())
        self.focus_label.setBuddy(self.focus_slider)
        self.contrast_label.setBuddy(self.focus_slider)
        self.brithness_label.setBuddy(self.focus_slider)        
        self.timer = QtCore.QTimer(self)
        self.timer.timeout.connect(detector.loop)
        self.timer.start(30)  # Aktualisiere alle 30 Millisekunden

        self.retranslateUi()
        self.autofocus_checkbox.toggled['bool'].connect(self.focus_slider.setEnabled) # type: ignore
        self.autofocus_checkbox.toggled['bool'].connect(self.focus_slider.setDisabled) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("BrickDetector", "MainWindow"))
        self.camera_settings_box.setTitle(_translate("BrickDetector", "Camera settings"))
        self.focus_label.setText(_translate("BrickDetector", "Focus"))
        self.autofocus_checkbox.setText(_translate("BrickDetector", "Autofocus"))
        self.static_radio.setText(_translate("BrickDetector", "Static"))
        self.live_radio.setText(_translate("BrickDetector", "Live"))
        self.image_label.setText(_translate("BrickDetector", "Image mode"))
        self.contrast_label.setText(_translate("BrickDetector", "Contrast"))
        self.brithness_label.setText(_translate("BrickDetector", "Brithness"))
        self.brick_list_text_area.setPlaceholderText(_translate("BrickDetector", "Bricklist:"))
        self.menuFile.setTitle(_translate("BrickDetector", "File"))
        self.menuAbout.setTitle(_translate("BrickDetector", "Help"))
        self.actionOpen.setText(_translate("BrickDetector", "Open"))
        self.actionSave.setText(_translate("BrickDetector", "Save"))
        self.actionAbout.setText(_translate("BrickDetector", "About"))
        self.actionHow_to_use.setText(_translate("BrickDetector", "How to use"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    BrickDetector = QtWidgets.QMainWindow()
    ui = Ui_BrickDetector()
    ui.setupUi(BrickDetector)
    BrickDetector.show()
    sys.exit(app.exec_())
